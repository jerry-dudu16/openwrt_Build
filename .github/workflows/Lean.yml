#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: Lean

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  #schedule:
  # - cron: 0 6 15,28 * *
  #push:
  #  branches:
  #    - main
  #  paths:
  #    - '*.config'
        
env:
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  PASSWORD: ${{ secrets.PASSWORD }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  DOCKER_ID: ${{ secrets.DOCKER_ID }}
  DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }} 
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  BUILD_FIRMWARE: LEAN

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev rename
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: 检查
      uses: actions/checkout@v3
        
    - name: 设置当前的日期
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%Y_%m.%d')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "DOCKERTAG=${{ secrets.DOCKER_ID }}/openwrt-6p:latest" >> $GITHUB_ENV
        VERSION="$(echo "${{github.event.action}}" | grep -Eo " [0-9.]+" | sed -e 's/ //')" || true
        [ "$VERSION" ] && echo "VERSION=$VERSION" >> $GITHUB_ENV || echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV
        
    - name: 克隆源代码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default


    - name: 更新 & 安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 自定义配置 ${{ env.BUILD_FIRMWARE }}
      # env:
      #   CONFIG_FILE: 'lean.config'
      run: |
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
      #  [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: 下载包文件
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s

    - name: 整理文件
      id: organize
      run: |
        echo "======================="
        echo "Space usage:"
        cd openwrt
        df -h
        cd ..
        echo "======================="
        echo "Prepare artifact"
        echo "-----------------------"
        mkdir -p firmware/package
        mv -f openwrt/bin/targets/*/*/{*combined*,*sysupgrade*} ./firmware/ 2>/dev/null || true
        cp ./openwrt/.config  ./firmware/${{ env.BUILD_FIRMWARE }}.config
        cp ./openwrt/build_dir/target-*/linux-*/linux-*/.config ./firmware/${{ env.BUILD_FIRMWARE }}_kernel.config
        rm -rf $(find ./openwrt/bin/targets/ -type d -name "packages")
        cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./firmware/package/
        cd firmware
        echo "v${{ env.date2 }}" > version.txt
        md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
        echo $md5 >> version.txt
        rename -v "s/^immortalwrt/${{ env.VERSION }}-${{ env.BUILD_FIRMWARE }}-openwrt/" * || true
        rename -v "s/^openwrt/${{ env.VERSION }}-${{ env.BUILD_FIRMWARE }}-openwrt/" * || true
        rename -v "s/friendlyarm_//" *gz || true
        echo $md5 >> version.txt
        echo ${{ env.BUILD_FIRMWARE }} >> version.txt     
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV          
        echo "======================="

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.date2 }}_${{ env.BUILD_FIRMWARE }}
        path: ${{ env.FIRMWARE }}   

    - name: 上传固件cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "url=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: 上传固件WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
